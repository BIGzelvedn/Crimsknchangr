-- Oyun yuklenene kadar bekle
if not game:IsLoaded() then
    game.Loaded:Wait()
end

local player = game.Players.LocalPlayer
local run_service = game:GetService("RunService")
local stats = game:GetService("Stats")
local info = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)

-- GUI kutuphaneleri
local repo = 'https://raw.githubusercontent.com/KINGHUB01/Gui/main/'
local library = loadstring(game:HttpGet(repo .. 'Gui%20Lib%20%5BLibrary%5D'))()
local theme_manager = loadstring(game:HttpGet(repo .. 'Gui%20Lib%20%5BThemeManager%5D'))()
local save_manager = loadstring(game:HttpGet(repo .. 'Gui%20Lib%20%5BSaveManager%5D'))()

-- Tüm Skin verileri (eksiksiz)
local skins = {
    { Name = "M4A1-1 - Patriot", Weapon = "M4A1-1", ColorMap = "rbxassetid://13945985275", MetalnessMap = "rbxassetid://13945986111", NormalMap = "rbxassetid://13945989865", RoughnessMap = "rbxassetid://13945990897" },
    { Name = "M4A1-1 - Aureus", Weapon = "M4A1-1", ColorMap = "rbxassetid://13714578014", MetalnessMap = "rbxassetid://13714330061", NormalMap = "rbxassetid://13714331534", RoughnessMap = "rbxassetid://13714329843" },
    { Name = "M4A1-1 - Fostbite", Weapon = "M4A1-1", ColorMap = "rbxassetid://15695458963", MetalnessMap = "rbxassetid://15695458963", NormalMap = "rbxassetid://15695458963", RoughnessMap = "rbxassetid://15695458963" },
    { Name = "Magnum - Amour", Weapon = "Magnum", ColorMap = "rbxassetid://16355308299", MetalnessMap = "rbxassetid://16355308299", NormalMap = "rbxassetid://16355308299", RoughnessMap = "rbxassetid://16355308299" },
    { Name = "Magnum - Grandpa", Weapon = "Magnum", ColorMap = "rbxassetid://10946557133", MetalnessMap = "rbxassetid://109465579371", NormalMap = "rbxassetid://109465582655", RoughnessMap = "rbxassetid://10946584119" },
    { Name = "Magnum - Inferno", Weapon = "Magnum", ColorMap = "rbxassetid://13565647644", MetalnessMap = "rbxassetid://13565650923", NormalMap = "rbxassetid://13565652460", RoughnessMap = "rbxassetid://13565654437" },
    { Name = "AKS-74U - Mire", Weapon = "AKS-74U", ColorMap = "rbxassetid://15177286670", MetalnessMap = "rbxassetid://15177289295", NormalMap = "rbxassetid://15177292421", RoughnessMap = "rbxassetid://15177292902" },
    { Name = "AKS-74U - Gravebound", Weapon = "AKS-74U", ColorMap = "rbxassetid://16355374224", MetalnessMap = "rbxassetid://16355374709", NormalMap = "rbxassetid://16355375244", RoughnessMap = "rbxassetid://16355375483" },
    { Name = "AKS-74U-X - Gravebound", Weapon = "AKS-74U", ColorMap = "rbxassetid://107225184415547", MetalnessMap = "rbxassetid://107225184415547", NormalMap = "rbxassetid://107225184415547", RoughnessMap = "rbxassetid://107225184415547" },
    { Name = "AKS-74U - Sharkbite", Weapon = "AKS-74U", ColorMap = "rbxassetid://11684759812", MetalnessMap = "rbxassetid://11684761413", NormalMap = "rbxassetid://11684763552", RoughnessMap = "rbxassetid://11684764559" },
    { Name = "AKS-74U - Sharkbite", Weapon = "AKS-74U", ColorMap = "rbxassetid://11684759812", MetalnessMap = "rbxassetid://11684761413", NormalMap = "rbxassetid://11684763552", RoughnessMap = "rbxassetid://11684764559" },
    { Name = "Tommy - Gold", Weapon = "Tommy", ColorMap = "rbxassetid://15039147920", MetalnessMap = "rbxassetid://15039147721", NormalMap = "rbxassetid://15039147363", RoughnessMap = "rbxassetid://15039147120" },
    { Name = "Tommy - Gold", Weapon = "Tommy-S", ColorMap = "rbxassetid://15039147920", MetalnessMap = "rbxassetid://15039147721", NormalMap = "rbxassetid://15039147363", RoughnessMap = "rbxassetid://15039147120" },
    { Name = "Tommy - Uncle Sam", Weapon = "Tommy-S", ColorMap = "rbxassetid://13936670325", MetalnessMap = "rbxassetid://13936670921", NormalMap = "rbxassetid://13936671749", RoughnessMap = "rbxassetid://13936672741" },
    { Name = "Tommy - Uncle Sam", Weapon = "Tommy", ColorMap = "rbxassetid://13936670325", MetalnessMap = "rbxassetid://13936670921", NormalMap = "rbxassetid://13936671749", RoughnessMap = "rbxassetid://13936672741" },
    { Name = "Uzi - Crimison", Weapon = "Uzi", ColorMap = "rbxassetid://13343335417", MetalnessMap = "rbxassetid://13343336766", NormalMap = "rbxassetid://13343337433", RoughnessMap = "rbxassetid://13343338573" },
    { Name = "MP7 - Hellrazor", Weapon = "MP7", ColorMap = "rbxassetid://13842812065", MetalnessMap = "rbxassetid://13841892618", NormalMap = "rbxassetid://13841893577", RoughnessMap = "rbxassetid://13841894868" },
    { Name = "Deagle - Reaper", Weapon = "Deagle", ColorMap = "rbxassetid://72301183330195", MetalnessMap = "rbxassetid://72301183330195", NormalMap = "rbxassetid://72301183330195", RoughnessMap = "rbxassetid://72301183330195" },
    { Name = "SKS - Gold", Weapon = "SKS", ColorMap = "rbxassetid://16300596462", MetalnessMap = "rbxassetid://16299699464", NormalMap = "rbxassetid://16299700340", RoughnessMap = "rbxassetid://16299699813" },
    { Name = "SKS - Jester", Weapon = "SKS", ColorMap = "rbxassetid://13343167267", MetalnessMap = "rbxassetid://13343167958", NormalMap = "rbxassetid://13343168956", RoughnessMap = "rbxassetid://13343168904" },
    { Name = "G-17 - Tactical Green", Weapon = "G-17", ColorMap = "rbxassetid://9422494421", MetalnessMap = "rbxassetid://9422514126", NormalMap = "rbxassetid://9422513602", RoughnessMap = "rbxassetid://9422512530" },
    { Name = "FNP - Pulse", Weapon = "FNP-45", ColorMap = "rbxassetid://16355357614", MetalnessMap = "rbxassetid://16355357297", NormalMap = "rbxassetid://16355360494", RoughnessMap = "rbxassetid://16355358774" },
    { Name = "G-17 - Pink", Weapon = "G-17", ColorMap = "rbxassetid://15998557522", MetalnessMap = "rbxassetid://15998558655", NormalMap = "rbxassetid://15998557948", RoughnessMap = "rbxassetid://15998558305" },
    { Name = "M1911 - Glory", Weapon = "M1911", ColorMap = "rbxassetid://13948805827", MetalnessMap = "rbxassetid://13948290980", NormalMap = "rbxassetid://13948291596", RoughnessMap = "rbxassetid://13948321939" },
    { Name = "UMP-45 - Lesion", Weapon = "UMP-45", ColorMap = "rbxassetid://15177221559", MetalnessMap = "rbxassetid://15177222124", NormalMap = "rbxassetid://15177222689", RoughnessMap = "rbxassetid://15177223202" },
    { Name = "Baretta - Digital", Weapon = "Beretta", ColorMap = "rbxassetid://9341791793", MetalnessMap = "rbxassetid://9341793470", NormalMap = "rbxassetid://9341794310", RoughnessMap = "rbxassetid://9341794971" },
    { Name = "Baretta - Gold", Weapon = "Beretta", ColorMap = "rbxassetid://15071801699", MetalnessMap = "rbxassetid://15071801490", NormalMap = "rbxassetid://15071801251", RoughnessMap = "rbxassetid://15071800826" },
    { Name = "FN-FAL - Majesty", Weapon = "FN-FAL", ColorMap = "rbxassetid://12268008265", MetalnessMap = "rbxassetid://12267979022", NormalMap = "rbxassetid://12267979962", RoughnessMap = "rbxassetid://12267980974" },
    { Name = "Mare - Marimaritime", Weapon = "Mare", ColorMap = "rbxassetid://1599688488", MetalnessMap = "rbxassetid://1599687195", NormalMap = "rbxassetid://1599689011", RoughnessMap = "rbxassetid://1599689324" },
    { Name = "Mare - Frostecho", Weapon = "Mare", ColorMap = "rbxassetid://15695474241", MetalnessMap = "rbxassetid://15695474241", NormalMap = "rbxassetid://15695474241", RoughnessMap = "rbxassetid://15695474241" },
    { Name = "Mare - Trickshot", Weapon = "Mare", ColorMap = "rbxassetid://16907785827", MetalnessMap = "rbxassetid://16907786165", NormalMap = "rbxassetid://16907787618", RoughnessMap = "rbxassetid://16907788208" },
    { Name = "RPG-7 - Gold", Weapon = "RPG-7", ColorMap = "rbxassetid://13715204837", MetalnessMap = "rbxassetid://13715205903", NormalMap = "rbxassetid://13715207167", RoughnessMap = "rbxassetid://13715207920" },
    { Name = "SCAR-H-1 - Gridlines", Weapon = "SCAR-H-1", ColorMap = "rbxassetid://16010525894", MetalnessMap = "rbxassetid://16010526167", NormalMap = "rbxassetid://16010528537", RoughnessMap = "rbxassetid://16010527352" },
    { Name = "SCAR-H-X - Gridlines", Weapon = "SCAR-H-X", ColorMap = "rbxassetid://16010525894", MetalnessMap = "rbxassetid://16010526167", NormalMap = "rbxassetid://16010528537", RoughnessMap = "rbxassetid://16010527352" },
    { Name = "BFG - Federal", Weapon = "BFG-1", ColorMap = "rbxassetid://13948416273", MetalnessMap = "rbxassetid://13948408225", NormalMap = "rbxassetid://13948408785", RoughnessMap = "rbxassetid://13948409253" },
    { Name = "Magnum - Abstract", Weapon = "Magnum", ColorMap = "rbxassetid://13851638932", MetalnessMap = "rbxassetid://13841628817", NormalMap = "rbxassetid://13841632677", RoughnessMap = "rbxassetid://13851639717" },
    { Name = "Deagle - Ember", Weapon = "Deagle", ColorMap = "rbxassetid://16041798229", MetalnessMap = "rbxassetid://16041799162", NormalMap = "rbxassetid://16041799824", RoughnessMap = "rbxassetid://16041799468" },
    { Name = "Deagle - Nacho", Weapon = "Deagle", ColorMap = "rbxassetid://16942392011", MetalnessMap = "rbxassetid://16942392549", NormalMap = "rbxassetid://16942393650", RoughnessMap = "rbxassetid://16942394043" },
    { Name = "Magnum - Articapex", Weapon = "Magnum", ColorMap = "rbxassetid://15710939034", MetalnessMap = "rbxassetid://15710939034", NormalMap = "rbxassetid://15710939034", RoughnessMap = "rbxassetid://15710939034" }
}


local selectedSkins, skinConfigs = {}, {}

-- GUI Yapısı
local window = library:CreateWindow({
    Title = 'Atlas Ware | SkinChanger | discord.gg/vqKfva9e ',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local tabs = {
    main = window:AddTab('Main'),
    ['ui settings'] = window:AddTab('UI Settings')
}

local menu_group = tabs['ui settings']:AddLeftGroupbox('Menu')
local skin_group = tabs.main:AddLeftGroupbox('SkinChanger')
local credits_group = tabs.main:AddRightGroupbox('Credits')

-- Benzersiz silah dropdownları
local weaponTypes = {}
local added = {}
for _, skin in ipairs(skins) do
    if not added[skin.Weapon] then
        table.insert(weaponTypes, skin.Weapon)
        added[skin.Weapon] = true
    end
end

for _, weapon in ipairs(weaponTypes) do
    local skinList = { "None" }
    for _, skin in ipairs(skins) do
        if skin.Weapon == weapon then
            table.insert(skinList, skin.Name)
        end
    end
    skin_group:AddDropdown(weapon, {
        Values = skinList,
        Default = "None",
        Multi = false,
        Text = weapon .. ' Skin',
        Tooltip = 'Select a skin for ' .. weapon,
    }):OnChanged(function(value)
        if value == "None" then
            selectedSkins[weapon] = nil
        else
            for _, skin in ipairs(skins) do
                if skin.Name == value then
                    selectedSkins[weapon] = skin
                    break
                end
            end
        end
    end)
end

skin_group:AddButton('Apply Skins', function()
    for weapon, skin in pairs(selectedSkins) do
        skinConfigs[weapon] = skin
    end
    local json = game:GetService("HttpService"):JSONEncode(skinConfigs)
    if not player:FindFirstChild("SkinConfigData") then
        local configVal = Instance.new("StringValue")
        configVal.Name = "SkinConfigData"
        configVal.Parent = player
    end
    player.SkinConfigData.Value = json
end)

-- AutoLoad sistemi
local success, saved = pcall(function()
    return game:GetService("HttpService"):JSONDecode(player:FindFirstChild("SkinConfigData") and player.SkinConfigData.Value or "{}")
end)
if success and typeof(saved) == "table" then
    for weapon, data in pairs(saved) do
        for _, skin in ipairs(skins) do
            if skin.Name == data.Name and skin.Weapon == weapon then
                skinConfigs[weapon] = skin
            end
        end
    end
end

-- Skin Uygulama
local function applySkin(skin)
    local char = player.Character
    if not char then return end
    local tool = char:FindFirstChildOfClass("Tool")
    if tool and skin and tool.Name == skin.Weapon then
        for _, part in ipairs(tool:GetDescendants()) do
            if part:IsA("MeshPart") then
                for _, child in ipairs(part:GetChildren()) do
                    if child:IsA("SurfaceAppearance") then
                        child:Destroy()
                    end
                end
                local sa = Instance.new("SurfaceAppearance")
                sa.ColorMap = skin.ColorMap
                sa.MetalnessMap = skin.MetalnessMap
                sa.NormalMap = skin.NormalMap
                sa.RoughnessMap = skin.RoughnessMap
                sa.Parent = part
            end
        end
    end
end

player.CharacterAdded:Connect(function(char)
    char.ChildAdded:Connect(function(child)
        if child:IsA("Tool") then
            task.wait(0.3)
            local configSkin = skinConfigs[child.Name]
            if configSkin then
                applySkin(configSkin)
            end
        end
    end)
end)

-- Credits ve Discord
credits_group:AddLabel('@zelvednpervet', true)
credits_group:AddButton({
    Text = 'Join our discord!',
    Func = function()
        setclipboard('https://discord.gg/vqKfva9e')
    end,
    Tooltip = 'Join our official discord server.'
})
credits_group:AddButton({
    Text = 'Scriptblox profile',
    Func = function()
        setclipboard('https://scriptblox.com/u/redogurt')
    end,
    Tooltip = 'My scriptblox profile'
})

-- Menu ayarları, tema ve FPS
menu_group:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })
library.ToggleKeybind = Options.MenuKeybind

theme_manager:SetLibrary(library)
save_manager:SetLibrary(library)
save_manager:IgnoreThemeSettings()
save_manager:SetIgnoreIndexes({ 'MenuKeybind' })
theme_manager:SetFolder('AtlasWare')
save_manager:SetFolder('AtlasWare/SkinRadar')
save_manager:BuildConfigSection(tabs['ui settings'])
theme_manager:ApplyToTab(tabs['ui settings'])
save_manager:LoadAutoloadConfig()

-- FPS & Ping
local FrameTimer = tick()
local FrameCounter = 0
local FPS = 60
local watermark_connection = run_service.RenderStepped:Connect(function()
    FrameCounter += 1
    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter
        FrameTimer = tick()
        FrameCounter = 0
    end
    library:SetWatermark(('Atlas Ware | %s fps | %s ms | game: ' .. info.Name):format(
        math.floor(FPS),
        math.floor(stats.Network.ServerStatsItem['Data Ping']:GetValue())
    ))
end)

menu_group:AddButton('Unload', function()
    watermark_connection:Disconnect()
    library:Unload()
end)
